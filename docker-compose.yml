version: '3.4'


x-odoo:
  &default-odoo
  tty: true
  image: "${IMAGE}:edge-${ODOO_VERSION}-devops"
  # ports: ['80:8069', '8072:8072']
  environment:
    # Comment out ODOO_* & PYTHONPATH overrides on layered projects
    - ODOO_CMD=/opt/odoo/vendor/odoo/cc/odoo-bin
    - ODOO_FRM=/opt/odoo/vendor/odoo/cc
    - PYTHONPATH=:/opt/odoo/vendor/odoo/cc
    - WDB_SOCKET_SERVER=wdb
    - WDB_SOCKET_PORT=19840
    - WDB_WEB_SERVER=wdb.localhost
    - WDB_WEB_PORT=80
  secrets:
    - source: adminpwd
      target: /run/secrets/adminpwd
  volumes:
  # Named Data volumes
  - data:/var/lib/odoo-persist
  - backup:/var/lib/backup
  - tests:/var/log/dodoo/tests
  - loader:/var/lib/dodoo/loader
  # Host paths (config)
  - ./cfg.d:/opt/odoo/cfg.d:ro  # ${ODOO_RC}
  # Host paths (source)
  - ./src:/opt/odoo/src:ro  # ${ODOO_SRC}
  - ./vendor:/opt/odoo/vendor:ro  # ${ODOO_VENDOR}
  # Current migration instructions
  - ./migration.yaml:/opt/odoo/migration.yaml:ro  # ${ODOO_MIG}
  - ./migration.d:/opt/odoo/migration.d:ro  # ${ODOO_MIG_DIR}
  - ./pytest.ini:/opt/odoo/pytest.ini:ro

secrets:
  adminpwd: {file: .adminpwd}
volumes:
  data: {driver: local}
  backup: {driver: local}
  tests: {driver: local}
  loader: {driver: local}
  psql: {driver: local}
networks:
  default: {internal: true}
  public: null
services:
  db:
    environment: [POSTGRES_USER=odoo, POSTGRES_PASSWORD=odoo, POSTGRES_DB=postgres]
    image: postgres:alpine
    ports: ['5433:5432']
    networks: {default: null, public: null}
    volumes: ['psql:/var/lib/postgresql/data']
  # http://filebrowser.localhost
  filebrowser:
    command: [--noauth]
    image: filebrowser/filebrowser
    volumes: ['data:/srv/data', 'backup:/srv/backup', 'tests:/srv/tests',
      'loader:/srv/loader']
  proxy:
    image: envoyproxy/envoy-alpine:v1.10.0
    networks:
      default:
        aliases:
        # For odoo to reach wkhtml from within the private network
        # Through the proxy: see envoy.yaml
        - odoo.localhost
        # See envoy.yaml
        - cdnjs.cloudflare.com
        - fonts.googleapis.com
        - fonts.gstatic.com
        - google.com
        - gravatar.com
      public: null
    ports: ['80:80', '9901:9901']
    volumes: ['./envoy.yaml:/etc/envoy/envoy.yaml']
  redis: {image: 'redis:5.0-alpine'}
  # http://mail.localhost
  smtpfake: {image: mailhog/mailhog}
  # http://wdb.localhost
  wdb:
    image: kozea/wdb:3.3.0
    ports: ['1984:1984']

  # http://odoo.localhost/longpolling/
  odoo-longpolling:
    << : *default-odoo
    entrypoint: ['/entrypoint.sh']
    command: ['gevent', '--dev', 'wdb,reload,qweb,werkzeug,xml']
    depends_on: ['db', 'wdb', 'proxy']

  # http://odoo.localhost
  odoo:
    << : *default-odoo
    entrypoint: ['/entrypoint.sh']
    command: ['--dev', 'wdb,reload,qweb,werkzeug,xml']
    depends_on: ['db', 'wdb', 'proxy', 'smtpfake']

  # http://odoo.localhost
  odoo-redis:
    << : *default-odoo
    entrypoint: ['/entrypoint.sh', 'odoo-redis', '--dev', 'wdb,reload,qweb,werkzeug,xml']
    command: []
    depends_on: ['db', 'wdb', 'proxy', 'smtpfake', 'redis']

# ========================

  dodoo:
    << : *default-odoo
    depends_on: ['db', 'wdb']
    entrypoint: ['/entrypoint.sh', 'dodoo']
    command: []

# ------------------------

  scaffold:
    << : *default-odoo
    command: []
    entrypoint: [/entrypoint.sh, scaffold]
    user: ${COMPOSE_IMPERSONATION}
    volumes: ['./src:/opt/odoo/src', './vendor:/opt/odoo/vendor:ro']

# ------------------------

  init:
    << : *default-odoo
    command: ['-nDockeryOdoo', '-mmail']
    entrypoint: [/entrypoint.sh, dodoo, init]
    depends_on: ['db']

# ------------------------

  rmdb:
    << : *default-odoo
    command: ['DockeryOdoo']
    entrypoint: [dropdb, -hdb, -Uodoo]
    depends_on: ['db']

# -----------------------

  apply-patches:
    command: []
    entrypoint: [/patches]
    image: ${IMAGE}:edge-${ODOO_VERSION}-devops
    networks: [public]
    tty: true
    user: ${COMPOSE_IMPERSONATION}
    volumes: ['./vendor:/opt/odoo/vendor']

# -----------------------

  apply-transform:
    command: []
    entrypoint: [odoo-migrate]
    image: ${IMAGE}:edge-${ODOO_VERSION}-devops
    networks: []
    tty: true
    entrypoint: [--directory, /opt/odoo/src, --no-commit]
    user: ${COMPOSE_IMPERSONATION}
    volumes: ['./src:/opt/odoo/src']

# ------------------------

  tests:
    << : *default-odoo
    depends_on: ['db', 'wdb']
    entrypoint: ['/entrypoint.sh', '--dev', 'wdb,qweb,werkzeug,xml', '--test-enable', '--without-demo=False', '--stop-after-init', '--logfile', '/var/log/dodoo/tests/']
    command: []
