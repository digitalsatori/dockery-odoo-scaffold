
#
# ------------------   Header   --------------- >|< ----- n/a ------- >|
#
# ------------------   Body (optional)   ---------------------------- >|
#
# ------------------   Footer (optional)   -------------------------- >|
#
#
# Header spec:
#
#    <type>(<scope>): (This commit will...) <commit action>
#
#
# Example:
#
#    chore(scaffold): pull new commit tmpl
#
#    Before this, it was hard for people to understand the importance of
#    commit discipline for creating high quality software and keep
#    efficiency high. With commitlint, the team can standardize on a
#    structured common language to get everyone on the same page.
#
#    Closes #123, Part of [345], Solves ![657]
#
#
# Type can be
#    feat     (new feature)
#    fix      (bug fix)
#    refactor (refactoring; no functional change)
#    style    (formatting; no code change)
#    doc      (changes to documentation)
#    test     (adding or refactoring tests; no production code change)
#    runtime  (modifying the runtime environment)
#    chore    (changes to tooling; no code change)
#    mig      (adding or refactoring migrations; no production code change)
#    revert   (revert erroneous comits of any kind)
#    hack     (temporary fix to make things move forward; please avoid it)
#
# --------------------
# Remember to:
#   * write all lower case
#   * use the imperative mood in the subject line
#   * do not end the subject line with a period
#   * separate subject from body with a blank line
#   * use the body to explain what and why (intent) vs. how
#   * can use multiple lines with "-" or "*" for bullet points in body
# --------------------
