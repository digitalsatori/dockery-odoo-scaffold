#!/usr/bin/env bash

project=$(basename "$(pwd)")
PS3='Please select Odoo version: '
options=("10.0" "11.0" "12.0" "master")
select opt in "${options[@]}"; do
	case "$REPLY" in
		1 ) version=$opt; break;;
		2 ) version=$opt; break;;
		3 ) version=$opt; break;;
		4 ) version=$opt; break;;
		*) echo "Invalid option. Try another one.";continue;;
	esac
done
echo -e "Odoo version: ${version}\n"

PS3='Use Odoo Enterprise (access required): '
options=("yes" "no")
select opt in "${options[@]}"; do
	case "$REPLY" in
		1 ) enterprise=$opt; echo -e "Fetching enterprise...\n"; break;;
		2 ) enterprise=$opt; echo -e "Without enterprise...\n"; break;;
		*) echo "Invalid option. Try another one.";continue;;
	esac
done


PS3='Add additional repos: '
options=("yes" "no")
select opt in "${options[@]}"; do
	case "$REPLY" in
		1 ) echo -e "Copy one repo per line. \n They must contain a ${version} branch.\n Finalize with CTRL+D\n"
			repos=($(</dev/stdin))
			for i in "${!repos[@]}"; do
				url="${repos[$i]}"
				org=$(basename "$(dirname "${url}")")
				repo=$(basename "${url}")
				repo="${repo%.*}"
				mkdir -p "vendor/${org}"
				git submodule add -b "${version}" "${url}" "vendor/${org}/${repo}"
				mountindex=$((10 + $i))
				volumemounts=${volumemounts:-# Autogenerated...}"\n  - ./vendor/${org}/${repo}:/opt/odoo/addons/0${mountindex}:ro"
				dockercopies=${dockercopies:-# Autogenerated...}"\nCOPY  --chown=odoo:odoo vendor/${org}/${repo}   /opt/odoo/addons/0${mountindex}"
			done
			break;;
		2 ) volumemounts=${volumemounts:-# Dummy mount not to break this yaml template...}"\n  - .gitignore:/.gitignore:ro"; break;;
		*) echo "Invalid option. Try another one.";continue;;
	esac
done

git submodule add -b "${version}" https://github.com/odoo/odoo.git vendor/odoo/cc

if [ "${enterprise}" = "yes" ]; then
	git submodule add -b "${version}" https://github.com/odoo/enterprise.git vendor/odoo/ee
else
	mkdir -p vendor/odoo/ee
	touch vendor/odoo/ee/.gitkeep
fi

# Seed Placeholders
sed -i "s|{{ VOLUMES }}|${volumemounts}|" docker-compose.override.yml
sed -i "s|{{ DOCKERCOPIES }}|${dockercopies}|" Dockerfile
sed -i "s/{{ PROJECT }}/${project}/" Dockerfile .env
sed -i "s/{{ DEFAULT_BRANCH }}/${version}/" Dockerfile .env
sed -i "s/{{ ENTERPRISE }}/${enterprise}/" Dockerfile .env

# Git commit
git add .
git commit -m "Customize Project"

if grep -Fxq "export COMPOSE_IMPERSONATION='$(id -u):$(id -g)'" ~/.bashrc; then
	true
else
	echo "export COMPOSE_IMPERSONATION='$(id -u):$(id -g)'" >> ~/.bashrc
	echo "export COMPOSE_IMPERSONATION=$(id -u):$(id -g)"
fi

if [ ! $(which pre-commit) ]; then
	echo -e "${RED}We install a bunch of pre-commit.com hooks"
	echo -e  "to help you produce better code ...\n${NC}"
	sudo -k -H pip install pre-commit
	pre-commit install
else
	pre-commit install
fi

echo -e "Next, run: \`make create\`"
