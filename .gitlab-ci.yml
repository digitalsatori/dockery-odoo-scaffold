### Instructions ###
#
# 1 image: xoelabs/dockery-odoo:ci comes with some cloud tools
#   preinstalled in order to orchestrate reiew-apps and rollouts.
#   If it doesn't fir yout need, you probably know what you're doing.
#
# 2 If you use vendored modules and want to include them in testing,
#   symlink them as indicated in the comments.
#
# 3 If you use gitlab's build in registry, CI_REGISTRY_IMAGE, represents
#   that repo, as given by gitlab. You want to make sure that it's the
#   same as IMAGE in your .env file. They both refer to the same repo.
#   The reason, they are not the same variable is that Job's image: tag
#   is expanded outside of the execution scopet (before_script scope).
#
# 4 Review carfully all VARIABLES, and get familiar with Gitlab-CI variable
#   expension. Especially you want to define sensitive variables in the gitlab
#   repository directly rather than checking them in into your source code.
#
# 5 Ensure test and migration stages use the correct runner image version


# Repaclace this with your custom ci image, if needed
image: docker:latest
variables:
  GIT_DEPTH: '50'
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: 'recursive'
  GIT_SSL_NO_VERIFY: "true"
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using Kubernetes executor, the variable should be set to
  # tcp://localhost:2375 because of how Kubernetes executor connects services
  # to the job container
  DOCKER_HOST: tcp://docker:2375/
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  CUSTOM_CONFIG: |
    [options]
    db_host = postgres
    db_port = 5432
    db_user = odoo
    db_password = odoo
    dbfilter = ^.*$
services:
  - docker:dind
cache:
  untracked: true
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
stages:
- Test
- Stage
- Release


include:
  - local: .gitlab/ci/tests.gitlab-ci.yml
  - local: .gitlab/ci/builds.gitlab-ci.yml

Test-Diff:
  extends: .tests
  only:
    refs: [merge_requests]
    changes: ['vendor/**/*', 'src/**/*']
  script:
  - dodoo test -d "${ODOO_DB_NAME}" --git-dir ./.git "origin/${ODOO_VERSION}"

Test-Weekly:
  extends: .tests
  only: [schedules]
  except: null
  script:
  - dodoo test -d "${ODOO_DB_NAME}" -i account,hr_payroll_account

# Migrate-Staged-DBs:
#   extends: .tests
#   only: [tags]
#   stage: Stage
#   variables:
#     STAGED_DBS: "database1 database2 database3"
#     CUSTOM_CONFIG: |
#       [options]
#       db_host = <postgreshost.tld>
#       db_port = 5432
#       db_user = odoo
#       db_password = <$GITLABCIVARIABLE>
#       dbfilter = ^.*$
#   script:
#   - |
#       for db in ${STAGED_DBS}; do
#         dodoo migrate \
#           -d "${db}" \
#           -f ./.migration.yml
#       done


Build-Twins:
  extends: .builds
  only:
    refs:
      - /^master|13\.0|12\.0|11\.0|10\.0|9\.0|8\.0|7\.0|6\.0|6\.1|5\.0$/
    changes:
      - migration.d/*
      - patches.d/*
      - vendor/*
      - src/*
      - Dockerfile

Release:
  extends: .builds
  only:
    - /^v?\d+\.\d+\.\d+$/
  except:
    refs: ['schedules']
