.builds:
  stage: Release
  except:
    refs: ['/^hotfix\/.*$/', 'schedules']
  before_script:
  # Set the repo's environment
  - export $(egrep -v '^#' .env | xargs)
  script:
  - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"

  - image="${IMAGE}:${CI_COMMIT_TAG:-edge}-${ODOO_VERSION}"
  - fromimage="${FROM}:${FROM_VERSION}-${ODOO_VERSION}"

  - docker pull ${fromimage} &> /dev/null
  - docker pull ${fromimage}-devops &> /dev/null

  - docker run
    --entrypoint ""
    --user "$(id -u):$(id -g)"
    --volume "${CI_PROJECT_DIR}/vendor:/mnt/vendor"
    ${fromimage}
    /usr/local/bin/apply-patches.sh
    "/opt/odoo/patches.d" "/mnt/"

  - docker run
    --entrypoint ""
    --user "$(id -u):$(id -g)"
    --volume "${CI_PROJECT_DIR}/vendor:/mnt/vendor"
    --volume "${CI_PROJECT_DIR}/patches.d:/mnt/patches.d"
    ${fromimage}
    /usr/local/bin/apply-patches.sh
    "/mnt/patches.d/" "/mnt/"

  - docker build --tag "${image}" --build-arg FROM_IMAGE="${fromimage}" .
  - docker push "${image}" &> /dev/null
  - docker build --tag "${image}-devops" --build-arg FROM_IMAGE="${fromimage}-devops" .
  - docker push "${image}-devops" &> /dev/null
